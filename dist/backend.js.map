{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/controller/event.js","webpack://backend/./backend/src/controller/test.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/service/event.js","webpack://backend/external \"require3\"","webpack://backend/./backend/src/service/test.js","webpack://backend/./backend/src/models.js","webpack://backend/./backend/src/model/wechatUser.js","webpack://backend/./backend/src/meta.js"],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA,eAAe,mBAAO,CAAC,CAAoB;AAC3C,gBAAgB,mBAAO,CAAC,CAAqB;AAC7C,eAAe,mBAAO,CAAC,CAAoB;AAC3C,oBAAoB,mBAAO,CAAC,CAAyB;;AAErD;;AAEA;AACA,iBAAiB,mBAAO,CAAC,CAAa;AACtC;AACA,mBAAmB,mBAAO,CAAC,EAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,eAAe,mBAAO,CAAC,EAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA,WAAW,mBAAO,CAAC,CAAmB;AACtC;;;;;;;ACFA;AACA;AACA;;;;;;;ACFA;AACA;AACA;;;;;;;ACFA;AACA;;;;;;;ACDA,gBAAgB,mBAAO,CAAC,CAAyB;AACjD,cAAc,mBAAO,CAAC,CAAuB;AAC7C,aAAa,mBAAO,CAAC,CAAsB;;AAE3C;AACA;AACA;AACA,KAAK,oFAAoF;AACzF,KAAK,kFAAkF;AACvF,KAAK,iFAAiF;AACtF;AACA,KAAK,8FAA8F,QAAQ,gBAAgB,EAAE,EAAE;AAC/H,KAAK,6GAA6G,QAAQ,gBAAgB,EAAE,EAAE;AAC9I,KAAK,0FAA0F,QAAQ,gBAAgB,EAAE,EAAE;AAC3H;AACA,KAAK,oFAAoF;AACzF,KAAK,4FAA4F;AACjG;AACA;AACA;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;AC7BA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;AACA;AACA;;;;;;;ACpBA,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C,cAAc,mBAAO,CAAC,EAAoB;AAC1C,aAAa,mBAAO,CAAC,EAAmB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;AChBA,iBAAiB,mBAAO,CAAC,EAAU;AACnC;;AAEA;;AAEA;;AAEA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uCAAuC,IAAI,gBAAgB;AACjF;AACA;AACA;;AAEA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA,wBAAwB,uCAAuC,IAAI,gBAAgB;AACnF;AACA;AACA;;AAEA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,gGAAgG;AACnH,mBAAmB,qFAAqF;AACxG,mBAAmB,uFAAuF;AAC1G;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;;;;;;;AC1DA,qC;;;;;;ACAA;;AAEA;;AAEA,qBAAqB,OAAO;AAC5B,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,OAAO;AAChC,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACvBA,mBAAmB,mBAAO,CAAC,EAAuB;;AAElD;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA,kBAAkB,iCAAiC,wBAAwB,EAAE;AAC7E;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\nmodule.exports = app => {\n\n  // routes\n  const routes = require('./routes.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n  Reply: '回复',\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","const version = require('./controller/version.js');\nconst event = require('./controller/event.js');\nconst test = require('./controller/test.js');\n\nmodule.exports = app => {\n  const routes = [\n    // version\n    { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/test', controller: version, middlewares: 'test' },\n    // event\n    { method: 'post', path: 'event/wechatMessage', controller: event, middlewares: 'inner', meta: { auth: { enable: false } } },\n    { method: 'post', path: 'event/wechatMessageMini', controller: event, middlewares: 'inner,wechatMini', meta: { auth: { enable: false } } },\n    { method: 'post', path: 'event/loginInfo', controller: event, middlewares: 'inner', meta: { auth: { enable: false } } },\n    // test\n    { method: 'post', path: 'test/getOpenid', controller: test, middlewares: 'inWechat' },\n    { method: 'post', path: 'test/getOpenidMini', controller: test, middlewares: 'inWechatMini' },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async test() {\n      await this.service.version.test(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","module.exports = app => {\n  class EventController extends app.Controller {\n\n    async wechatMessage() {\n      const res = await this.service.event.wechatMessage({\n        event: this.ctx.request.body.event,\n        data: this.ctx.request.body.data,\n      });\n      this.ctx.success(res);\n    }\n\n    async wechatMessageMini() {\n      const res = await this.service.event.wechatMessageMini({\n        event: this.ctx.request.body.event,\n        data: this.ctx.request.body.data,\n      });\n      this.ctx.success(res);\n    }\n\n    async loginInfo() {\n      const res = await this.service.event.loginInfo({\n        event: this.ctx.request.body.event,\n        data: this.ctx.request.body.data,\n      });\n      this.ctx.success(res);\n    }\n\n  }\n  return EventController;\n};\n","module.exports = app => {\n  class TestController extends app.Controller {\n\n    async getOpenid() {\n      const res = await this.service.test.getOpenid({\n        user: this.ctx.user.op,\n      });\n      this.ctx.success(res);\n    }\n\n    async getOpenidMini() {\n      const res = await this.service.test.getOpenidMini({\n        user: this.ctx.user.op,\n      });\n      this.ctx.success(res);\n    }\n\n\n  }\n  return TestController;\n};\n","const version = require('./service/version.js');\nconst event = require('./service/event.js');\nconst test = require('./service/test.js');\n\nmodule.exports = app => {\n  const services = {\n    version,\n    event,\n    test,\n  };\n  return services;\n};\n","module.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n    }\n\n    async init(options) {\n    }\n\n    async test() {\n    }\n\n  }\n\n  return Version;\n};\n","const require3 = require('require3');\nconst extend = require3('extend2');\n\nmodule.exports = app => {\n\n  class Event extends app.Service {\n\n    async wechatMessage({ event, data }) {\n      const message = data.message;\n      if (message.MsgType === 'text') {\n        event.break = true;\n        return {\n          ToUserName: message.FromUserName,\n          FromUserName: message.ToUserName,\n          CreateTime: new Date().getTime(),\n          MsgType: 'text',\n          Content: `${this.ctx.text.locale('zh-cn', 'Reply')}: ${message.Content}`,\n        };\n      }\n    }\n\n    async wechatMessageMini({ event, data }) {\n      const message = data.message;\n      if (message.MsgType === 'text') {\n        event.break = true;\n        const text = `${this.ctx.text.locale('zh-cn', 'Reply')}: ${message.Content}`;\n        await this.ctx.meta.wechatMini.sendText(message.FromUserName, text);\n      }\n    }\n\n    async loginInfo({ /* event,*/ data }) {\n      const info = data.info;\n      const provider = info.user && info.user.provider;\n      if (provider && provider.module === 'a-wechat' && provider.providerName === 'wechat') {\n        info.config = extend(true, info.config, {\n          modules: {\n            'a-layoutmobile': {\n              layout: {\n                login: '/a/login/login',\n                loginOnStart: true,\n                toolbar: {\n                  tabbar: true, labels: true, bottomMd: true,\n                },\n                tabs: [\n                  { name: 'Test', tabLinkActive: true, iconMaterial: 'group_work', url: '/test/wechat/test/index' },\n                  { name: 'Home', tabLinkActive: false, iconMaterial: 'home', url: '/a/base/menu/list' },\n                  { name: 'Mine', tabLinkActive: false, iconMaterial: 'person', url: '/a/user/user/mine' },\n                ],\n              },\n            },\n          },\n        });\n      }\n    }\n\n  }\n\n  return Event;\n};\n","module.exports = require(\"require3\");","module.exports = app => {\n\n  class Test extends app.Service {\n\n    async getOpenid({ user }) {\n      const wechatUser = await this.ctx.model.wechatUser.get({ userId: user.id, scene: 1 });\n      return {\n        openid: wechatUser.openid,\n        unionid: wechatUser.unionid,\n      };\n    }\n\n    async getOpenidMini({ user }) {\n      const wechatUser = await this.ctx.model.wechatUser.get({ userId: user.id, scene: 2 });\n      return {\n        openid: wechatUser.openid,\n        unionid: wechatUser.unionid,\n      };\n    }\n\n  }\n\n  return Test;\n};\n","const wechatUser = require('./model/wechatUser.js');\n\nmodule.exports = app => {\n  const models = {\n    wechatUser,\n  };\n  return models;\n};\n","module.exports = app => {\n  class WechatUser extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aWechatUser', options: { disableDeleted: false } });\n    }\n  }\n  return WechatUser;\n};\n","module.exports = app => {\n  // const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n      functions: {\n      },\n    },\n    validation: {\n      validators: {\n      },\n      keywords: {},\n      schemas: {\n      },\n    },\n    event: {\n      implementations: {\n        'a-wechat:wechatMessage': 'event/wechatMessage',\n        'a-wechat:wechatMessageMini': 'event/wechatMessageMini',\n        'a-base:loginInfo': 'event/loginInfo',\n      },\n    },\n  };\n  return meta;\n};\n"],"sourceRoot":""}